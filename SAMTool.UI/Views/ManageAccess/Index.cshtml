@model SAMTool.UI.Models.ManageAccessViewModel
@using SAMTool.UI.App_Start
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
}
<h2>Manage Object Access</h2>

<div class="">
    <div class="" id="sectionManageAccessbtnPatch" style="min-height:25px">

        @{
            var data = new { ActionType = "Default" };
            @Html.Action("ChangeButtonStyle", "ManageAccess", data);
        }
    </div>
</div>
<div class="form-horizontal" id="formDisplay">
    <div class="col-md-12">

        <div class="col-md-4" style="padding-left: 0px;">
            <div class="col-md-12" style="padding-left: 0px;border-bottom: 2px solid gainsboro;">
                <div class="form-group">
                    <div class="col-md-4">
                        <label class="control-label">Select Application</label>
                    </div>
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.AppObjectObj.AppID, Model.ApplicationList, "--Select Application--", new { @class = "form-control", @onchange = "ChangeObjectData(this)", @id = "ddlApplication" })
                    </div>
                    @*<div class="col-md-1 mandatory"></div>*@
                </div>
            </div>
            <div class="col-md-12" style="padding-left: 0px;border-bottom: 2px solid gainsboro;margin-top:4%">
                <div class="form-group">
                    <div class="col-md-4">
                        <label class="control-label">Select Role</label>
                    </div>
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.RoleID, Model.RoleList, "--Select Role--", new { @class = "form-control", @onchange = "ChangeObjectData(this)", @id = "ddlRole" })
                    </div>
                    @*<div class="col-md-1 mandatory"></div>*@
                </div>
            </div>
           
        </div>

    </div>
    <div class="col-md-12">&nbsp;</div>
    <div id="AppObjecttbldiv" class="col-md-12">
        <table id="tblAppObjects" class="table table-striped table-bordered table-hover" cellspacing="0" style="width:100%">
            <thead>
                <tr class="text-center">
                    <th>ID</th>
                    <th>Object Name</th>
                    <th>Application Name</th>
                    <th>Read</th>
                    <th>Write</th>
                    <th>Delete</th>
                    <th>Manage Sub-object</th>
                </tr>
            </thead>
        </table>
    </div>


</div>



<div>
</div>
































@*<h2>Index</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ManageAccessViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ObjectID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ObjectID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ObjectID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoleID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoleID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Read, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Read)
                    @Html.ValidationMessageFor(model => model.Read, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Write, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Write)
                    @Html.ValidationMessageFor(model => model.Write, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Delete, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Delete)
                    @Html.ValidationMessageFor(model => model.Delete, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Special, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Special)
                    @Html.ValidationMessageFor(model => model.Special, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@

@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/userpluginjs")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/ManageAccess")
}
